{
	"info": {
		"_postman_id": "5d206303-94d5-4d39-8a1d-3bd8ec62c55e",
		"name": "CloudLiquid",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "36447613"
	},
	"item": [
		{
			"name": "CloudLiquid_JSON_InOut",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"CheckString\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.ExampleProperty).to.eql(\"HarcodedString\");\r",
							"});\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response contains ExampleProperty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"ExampleProperty\", \"HarcodedString\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/JSON",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"a\":true,\r\n    \"b\":true,\r\n    \"SomeBigObject\":{\r\n        \"NowAnArray!\":[\r\n            \"withSpecialObjects!@§£@@£@€\",\r\n            \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_SalesForce",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response has CreateOpportunity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"CreateOpportunity\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Correct number of records in CreateOpportunity and UpdateOpportunity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.CreateOpportunity.records).to.be.an('array');\r",
							"    pm.expect(jsonData.UpdateOpportunity.records).to.be.an('array');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/salesforce",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"OpportunityRequest\":[\r\n        {\r\n            \"Name\":\"TEST\",\r\n            \"Description\":\"This is an example Opportunity\",\r\n            \"Owner\":\"João Cardoso\",\r\n            \"Quote\":[\r\n                {\r\n                    \"Name\":\"TEST QUOTE\",\r\n                    \"Description\":\"This is an example Quote\",\r\n                    \"Property1\": null,\r\n                    \"QuoteLine\":[\r\n                        {\r\n                            \"Name\": \"TEST QUOTELINE\",\r\n                            \"Description\":\"This is an example Quoteline\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Name\":\"TEST\",\r\n            \"Id\":\"TEST\",\r\n            \"Description\":\"This is an example Opportunity\",\r\n            \"Owner\":\"João Cardoso\",\r\n            \"Quote\":[\r\n                {\r\n                    \"Name\":\"TEST QUOTE\",\r\n                    \"Description\":\"This is an example Quote\",\r\n                    \"QuoteLine\":[\r\n                        {\r\n                            \"Name\": \"TEST QUOTELINE\",\r\n                            \"Description\":\"This is an example Quoteline\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_SimpleXml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is XML\", function () {\r",
							"    pm.response.to.be.xml;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/XML",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"a\": true,\r\n    \"b\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is XML\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/XMLExample",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":\"OLA\",\r\n        \"b\":true,\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_XML_Out Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is XML\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/XMLExample",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":true,\r\n        \"b\":true,\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_CaptureJson",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is SUCCESS\", function () {\r",
							"    var responseText = pm.response.text();\r",
							"    pm.expect(responseText).to.eql(\"SUCCESS\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/CaptureJson",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\": {\r\n        \"a\": true,\r\n        \"b\": true,\r\n        \"SomeBigObject\": {\r\n            \"NowAnArray!\": [\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_ClearNulls",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"capture_json is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.capture_json).to.not.have.property(\"test\");\r",
							"    pm.expect(jsonData.capture_json).to.have.property(\"test2\", \"Success\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/ClearNulls",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": {\r\n        \"a\": null,\r\n        \"b\": \"Value\",\r\n        \"c\": {\r\n            \"nested\": null\r\n        }\r\n    }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_LiquidContains",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is valid JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.not.be.empty;\r",
							"});\r",
							"pm.test(\"Response has expected properties\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys(\"contains_apple\", \"contains_orange\");\r",
							"});\r",
							"pm.test(\"'contains_apple' is a boolean\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.contains_apple).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "From",
						"value": "data/LiquidContains",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fruits\": [\"apple\", \"banana\", \"cherry\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_JSON_Salesforce",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"CheckString\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.ExampleProperty).to.eql(\"HarcodedString\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.32.1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "From",
						"value": "data/salesforce",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"OpportunityRequest\":[\r\n        {\r\n            \"Name\":\"TEST\",\r\n            \"Description\":\"This is an example Opportunity\",\r\n            \"Owner\":\"João Cardoso\",\r\n            \"Quote\":[\r\n                {\r\n                    \"Name\":\"TEST QUOTE\",\r\n                    \"Description\":\"This is an example Quote\",\r\n                    \"Property1\": null,\r\n                    \"QuoteLine\":[\r\n                        {\r\n                            \"Name\": \"TEST QUOTELINE\",\r\n                            \"Description\":\"This is an example Quoteline\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Name\":\"TEST\",\r\n            \"Id\":\"TEST\",\r\n            \"Description\":\"This is an example Opportunity\",\r\n            \"Owner\":\"João Cardoso\",\r\n            \"Quote\":[\r\n                {\r\n                    \"Name\":\"TEST QUOTE\",\r\n                    \"Description\":\"This is an example Quote\",\r\n                    \"QuoteLine\":[\r\n                        {\r\n                            \"Name\": \"TEST QUOTELINE\",\r\n                            \"Description\":\"This is an example Quoteline\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_JSON_Error_In_XML_out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.32.1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "From",
						"value": "data/JSON",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":true,\r\n        \"b\":true,\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_JSON_Error_In_JSON_Out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"CheckString\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.Action).to.eql(\"Parsing_Input\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.32.1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "From",
						"value": "data/JSON",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":true,\r\n        \"b\":true\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_JSON_In_XML_Out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.32.1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "From",
						"value": "data/XMLExample",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":\"OLA\",\r\n        \"b\":true,\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		},
		{
			"name": "CloudLiquid_JSON_In_XML_Out Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"CheckString\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.Action).to.eql(\"Parsing_Input\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.32.1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "From",
						"value": "data/XMLExample",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Data\":{\r\n        \"a\":true,\r\n        \"b\":true,\r\n        \"SomeBigObject\":{\r\n            \"NowAnArray!\":[\r\n                \"withSpecialObjects!@§£@@£@€\",\r\n                \"StringEscapesSoWeCan\\\"Test\\\"\"\r\n            ]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:7071/api/CloudLiquid"
			},
			"response": []
		}
	]
}