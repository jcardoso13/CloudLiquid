{
  "ContentFactory/README.html": {
    "href": "ContentFactory/README.html",
    "title": "ContentFactory Module | CloudLiquid",
    "keywords": "ContentFactory Module The ContentFactory module is a core component of the CloudLiquid framework, designed to facilitate the parsing and transformation of data from various formats such as JSON, CSV, and XML into objects. This module is highly versatile and can be integrated with different templating engines like DotLiquid and Scriban, making it an essential tool for data handling and transformations. Features Data Parsing: Supports parsing data from JSON, CSV, and XML formats into objects. Integration with Templating Engines: Seamlessly works with DotLiquid and Scriban to transform payloads into suitable formats. Flexible and Extensible: Designed to be easily extended for additional data formats and use cases. Getting Started To use the ContentFactory module in your projects, ensure that you have the CloudLiquid framework installed. You can clone the CloudLiquid repository and include the ContentFactory module in your project: git clone https://github.com/jcardoso13/CloudLiquid.git Refer to the CloudLiquid framework's README.md for detailed setup instructions and dependencies. Usage The ContentFactory module provides a set of classes and interfaces to work with different content types. Here's a quick overview of how to use it: Reading Content To read content, use the appropriate IContentReader implementation for your data format. For example, to read JSON data: var jsonReader = new CloudLiquid.ContentFactory.JsonContentReader(); var myObject = jsonReader.ParseString(jsonString); Writing Content Similarly, to write content, use the corresponding IContentWriter implementation: var jsonWriter = new CloudLiquid.ContentFactory.JsonContentWriter(); var jsonString = jsonWriter.CreateResponse(myObject); For more detailed examples and advanced features, refer to the specific documentation within the ContentFactory module. Contributing Contributions to the CloudLiquid framework, including the ContentFactory module, are welcome. Please refer to the main CloudLiquid README.md for contribution guidelines. License The ContentFactory module, as part of the CloudLiquid framework, is licensed under the GNU General Public License v3.0. See the LICENSE file for more details. More Information For the most up-to-date information on the ContentFactory module and the CloudLiquid framework, please visit the GitHub repository. This documentation is part of the CloudLiquid framework. For further improvements and detailed documentation, keep an eye on the GitHub repository. This README provides an overview of the ContentFactory module, its features, usage examples, and contribution guidelines, tailored to the information available in your workspace."
  },
  "README.html": {
    "href": "README.html",
    "title": "Cloud Liquid Framework | CloudLiquid",
    "keywords": "Cloud Liquid Framework CloudLiquid is a versatile framework designed to facilitate the parsing of data from HTTP content or strings containing JSON, CSV, and XML data into objects that other projects can utilize. Originally developed to work with CloudLiquid and LiquidConsole or Transform-Data-Functions, it plays a crucial role in transforming payloads into suitable formats for various templating engines. For DotLiquid, it converts payloads into Hash objects (Dictionary<string, object>), and for Scriban, it transforms payloads into ScriptObjects. Features Data Parsing: Easily parse JSON, CSV, and XML data into Hash objects. Integration with Templating Engines: Expanding DotLiquid for transforming payloads. Flexible Content Factory: Utilize the ContentFactory module for advanced data handling and transformations. Getting Started To get started with CloudLiquid, clone the repository to your local machine: git clone https://github.com/jcardoso13/CloudLiquid.git Ensure you have the necessary dependencies installed and follow the setup instructions detailed in the AzureCloudLiquid README. Using Liquid Templates with CloudLiquid CloudLiquid enhances the use of Liquid templates, allowing for easy integration and manipulation of data in formats like JSON, CSV, and XML. Here's how to get started with Liquid templates in CloudLiquid: Basic Example To render a simple greeting message using a Liquid template: Create a Liquid Template Hello, {{ user.name }}! Parse and Render the Template in CloudLiquid Assuming you have a JSON string {\"name\": \"John Doe\"}, you can parse this JSON and render the template as follows: using DotLiquid; using Microsoft.Extensions.Logging; using CloudLiquid.Azure.Exceptions; using CloudLiquid.Core; using CloudLiquid.ObjectModel; // Parse the JSON string into a Hash object var userData = \"{\\\"name\\\": \\\"John Doe\\\"}\"; using var loggerFactory = LoggerFactory.Create(builder => { builder.AddConsole(); }); // Create a logger instance for the Program class var logger = loggerFactory.CreateLogger<Program>(); // Create a new instance of the LiquidProcessor class var liquidProcessor = new LiquidProcessor(logger, null); // Get a content reader for JSON data var contentReader = ContentFactory.GetContentReader(\"application/json\"); // Parse the user data string and run the liquid processor with the parsed data RunResult result = liquidProcessor.Run(contentReader.ParseString(userData), \"Hello, {{ user.name }}!\"); Console.WriteLine(result.Output); // Outputs: Hello, John Doe! Advanced Usage CloudLiquid also supports more complex scenarios, such as iterating over collections, using conditionals, and incorporating custom filters or tags that you define. Here's an example of iterating over a list of items in a Liquid template: {%- if content.name != null -%} {{ content | clear_nulls | json }} {%- endif -%} Input of the Liquid Template: { \"name\": \"John Doe\", \"age\": null, \"email\": \"johndoe@example.com\", \"address\": null, \"isEmployed\": true, \"hobbies\": [\"reading\", \"running\", \"cooking\"], \"favoriteColor\": \"blue\", \"height\": 175.5, \"weight\": 70.2 } And the corresponding C# code to render this template: using DotLiquid; using Microsoft.Extensions.Logging; using CloudLiquid.Azure.Exceptions; using CloudLiquid.Core; using CloudLiquid.ObjectModel; // JSON Input var userData = \"{\\r\\n \\\"name\\\": \\\"John Doe\\\",\\r\\n \\\"age\\\": null,\\r\\n \\\"email\\\": \\\"johndoe@example.com\\\",\\r\\n \\\"address\\\": null,\\r\\n \\\"isEmployed\\\": true,\\r\\n \\\"hobbies\\\": [\\\"reading\\\", \\\"running\\\", \\\"cooking\\\"],\\r\\n \\\"favoriteColor\\\": \\\"blue\\\",\\r\\n \\\"height\\\": 175.5,\\r\\n \\\"weight\\\": 70.2\\r\\n}\"; using var loggerFactory = LoggerFactory.Create(builder => { builder.AddConsole(); }); // Create a logger instance for the Program class var logger = loggerFactory.CreateLogger<Program>(); var json = \"{\\r\\n{% for item in content %}\\r\\n {{ item.key | json }}: {{ item.value | json }}\\r\\n{% endfor %}\\r\\n}\"; // Create a new instance of the LiquidProcessor class var liquidProcessor = new LiquidProcessor(logger, null); // Get a content reader for JSON data var contentReader = ContentFactory.GetContentReader(\"application/json\"); // Parse the user data string and run the liquid processor with the parsed data RunResult result = liquidProcessor.Run(contentReader.ParseString(userData), json); Console.WriteLine(result.Output); This will generate the following output: { \"name\": \"John Doe\", \"email\": \"johndoe@example.com\", \"isEmployed\": true, \"hobbies\": [\"reading\", \"running\", \"cooking\"], \"favoriteColor\": \"blue\", \"height\": 175.5, \"weight\": 70.2 } Filter and Tags Documentation The documentation for CloudLiquid filters and tags can be found in the Filters and Tags files. This comprehensive guide provides detailed information on each filter available in CloudLiquid, including their usage, parameters, and examples. Whether you need to manipulate strings, format dates, or manipulate JSON Objects and Lists, the filter documentation will help you leverage the full power of CloudLiquid's filtering capabilities. Make sure to refer to this documentation whenever you need to apply filters to your CloudLiquid templates. Contributing Contributions to CloudLiquid are welcome! If you have any questions, feature requests, or issues, please add an issue on GitHub or contact the repository owner, João Pedro Cardoso (jpcardoso@outlook.pt). License CloudLiquid is licensed under the GPLv3 License. Feel free to use, modify, and distribute the code as per the license agreement. More Information This README is generated as part of the CloudLiquid framework documentation. For the most up-to-date information, please visit the GitHub repository. Any Questions or Feature requests, please add an Issue or contact Repo Owner João Pedro Cardoso (jpcardoso@outlook.pt)."
  },
  "SECURITY.html": {
    "href": "SECURITY.html",
    "title": "Security Policy | CloudLiquid",
    "keywords": "Security Policy Supported Versions Only the latest v1.1.x versions will be getting security updates. Version Supported 1.1.x ✅ 1.0.x ❌ Reporting a Vulnerability If you find a vulnerability in the code, please send an email at jpcardoso@outlook.pt"
  },
  "api/CloudLiquid.BaseCloudLiquidTag.html": {
    "href": "api/CloudLiquid.BaseCloudLiquidTag.html",
    "title": "Class BaseCloudLiquidTag | CloudLiquid",
    "keywords": "Class BaseCloudLiquidTag Namespace CloudLiquid Assembly CloudLiquid.dll public abstract class BaseCloudLiquidTag : Block Inheritance object Tag Block BaseCloudLiquidTag Derived AzureTag CaptureJSON CaptureXML IncludeLocal Inherited Members Block.Parse(List<string>) Block.EndTag() Block.UnknownTag(string, string, List<string>) Block.CreateVariable(string) Block.Render(Context, TextWriter) Block.AssertMissingDelimitation() Block.RenderAll(List<object>, Context, TextWriter) Block.BlockDelimiter Tag.NodeList Tag.TagName Tag.Markup Tag.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseCloudLiquidTag() Initializes a new instance of the BaseCloudLiquidTag/> class. public BaseCloudLiquidTag() BaseCloudLiquidTag(ILogger) Initializes a new instance of the BaseCloudLiquidTag class with the specified logger. public BaseCloudLiquidTag(ILogger logger) Parameters logger ILogger The logger instance. Properties Logger Gets the logger instance. protected ILogger Logger { get; } Property Value ILogger To protected string To { get; } Property Value string Methods Initialize(string, string, List<string>) Initializes the tag with the specified tagName, markup, and tokens. public override void Initialize(string tagName, string markup, List<string> tokens) Parameters tagName string The name of the tag. markup string The markup for the tag. tokens List<string> The list of tokens. InitializeLogger(ILogger) Initializes the logger instance. public void InitializeLogger(ILogger logger) Parameters logger ILogger The logger instance."
  },
  "api/CloudLiquid.ContentFactory.BasicContentWriter.html": {
    "href": "api/CloudLiquid.ContentFactory.BasicContentWriter.html",
    "title": "Class BasicContentWriter | CloudLiquid",
    "keywords": "Class BasicContentWriter Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class BasicContentWriter : IContentWriter Inheritance object BasicContentWriter Implements IContentWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasicContentWriter(string) public BasicContentWriter(string contentType) Parameters contentType string Methods CreateResponse(string) public StringContent CreateResponse(string output) Parameters output string Returns StringContent"
  },
  "api/CloudLiquid.ContentFactory.ContentFactory.html": {
    "href": "api/CloudLiquid.ContentFactory.ContentFactory.html",
    "title": "Class ContentFactory | CloudLiquid",
    "keywords": "Class ContentFactory Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public static class ContentFactory Inheritance object ContentFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetContentReader(string) public static IContentReader GetContentReader(string contentType) Parameters contentType string Returns IContentReader GetContentWriter(string) public static IContentWriter GetContentWriter(string contentType) Parameters contentType string Returns IContentWriter"
  },
  "api/CloudLiquid.ContentFactory.Csv2ContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.Csv2ContentReader.html",
    "title": "Class Csv2ContentReader | CloudLiquid",
    "keywords": "Class Csv2ContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class Csv2ContentReader : IContentReader Inheritance object Csv2ContentReader Implements IContentReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseRequestAsync(HttpContent) public Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) public Hash ParseString(string content) Parameters content string Returns Hash"
  },
  "api/CloudLiquid.ContentFactory.CsvContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.CsvContentReader.html",
    "title": "Class CsvContentReader | CloudLiquid",
    "keywords": "Class CsvContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class CsvContentReader : IContentReader Inheritance object CsvContentReader Implements IContentReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseRequestAsync(HttpContent) public Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) public Hash ParseString(string content) Parameters content string Returns Hash"
  },
  "api/CloudLiquid.ContentFactory.DictionaryFactory.html": {
    "href": "api/CloudLiquid.ContentFactory.DictionaryFactory.html",
    "title": "Class DictionaryFactory | CloudLiquid",
    "keywords": "Class DictionaryFactory Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class DictionaryFactory Inheritance object DictionaryFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RemoveEmptyChildren(dynamic) public static dynamic RemoveEmptyChildren(dynamic token) Parameters token dynamic Returns dynamic"
  },
  "api/CloudLiquid.ContentFactory.DictionaryStringObjectJsonConverter.html": {
    "href": "api/CloudLiquid.ContentFactory.DictionaryStringObjectJsonConverter.html",
    "title": "Class DictionaryStringObjectJsonConverter | CloudLiquid",
    "keywords": "Class DictionaryStringObjectJsonConverter Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class DictionaryStringObjectJsonConverter : JsonConverter<IDictionary<string, dynamic>> Inheritance object JsonConverter JsonConverter<IDictionary<string, dynamic>> DictionaryStringObjectJsonConverter Inherited Members JsonConverter<IDictionary<string, dynamic>>.CanConvert(Type) JsonConverter<IDictionary<string, dynamic>>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<IDictionary<string, dynamic>>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<IDictionary<string, dynamic>>.Write(Utf8JsonWriter, IDictionary<string, dynamic>, JsonSerializerOptions) JsonConverter<IDictionary<string, dynamic>>.WriteAsPropertyName(Utf8JsonWriter, IDictionary<string, dynamic>, JsonSerializerOptions) JsonConverter<IDictionary<string, dynamic>>.HandleNull JsonConverter<IDictionary<string, dynamic>>.Type JsonConverter.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvert(Type) Determines whether the specified type can be converted. public override bool CanConvert(Type typeToConvert) Parameters typeToConvert Type The type to compare against. Returns bool true if the type can be converted; otherwise, false. Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type IDictionary<string, dynamic>. public override Dictionary<string, dynamic> Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Dictionary<string, dynamic> The converted value. Write(Utf8JsonWriter, IDictionary<string, dynamic>, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, IDictionary<string, dynamic> value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value IDictionary<string, dynamic> The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/CloudLiquid.ContentFactory.IContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.IContentReader.html",
    "title": "Interface IContentReader | CloudLiquid",
    "keywords": "Interface IContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public interface IContentReader Methods ParseRequestAsync(HttpContent) Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) Hash ParseString(string content) Parameters content string Returns Hash"
  },
  "api/CloudLiquid.ContentFactory.IContentWriter.html": {
    "href": "api/CloudLiquid.ContentFactory.IContentWriter.html",
    "title": "Interface IContentWriter | CloudLiquid",
    "keywords": "Interface IContentWriter Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public interface IContentWriter Methods CreateResponse(string) StringContent CreateResponse(string output) Parameters output string Returns StringContent"
  },
  "api/CloudLiquid.ContentFactory.JsonContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.JsonContentReader.html",
    "title": "Class JsonContentReader | CloudLiquid",
    "keywords": "Class JsonContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class JsonContentReader : IContentReader Inheritance object JsonContentReader Implements IContentReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JsonContentReader() public JsonContentReader() Methods ParseRequestAsync(HttpContent) public Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) public Hash ParseString(string content) Parameters content string Returns Hash"
  },
  "api/CloudLiquid.ContentFactory.JsonContentWriter.html": {
    "href": "api/CloudLiquid.ContentFactory.JsonContentWriter.html",
    "title": "Class JsonContentWriter | CloudLiquid",
    "keywords": "Class JsonContentWriter Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class JsonContentWriter : IContentWriter Inheritance object JsonContentWriter Implements IContentWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JsonContentWriter(string) public JsonContentWriter(string contentType) Parameters contentType string Methods CreateResponse(string) public StringContent CreateResponse(string output) Parameters output string Returns StringContent"
  },
  "api/CloudLiquid.ContentFactory.TSVContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.TSVContentReader.html",
    "title": "Class TSVContentReader | CloudLiquid",
    "keywords": "Class TSVContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class TSVContentReader : IContentReader Inheritance object TSVContentReader Implements IContentReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseRequestAsync(HttpContent) public Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) public Hash ParseString(string content) Parameters content string Returns Hash"
  },
  "api/CloudLiquid.ContentFactory.XmlContentReader.html": {
    "href": "api/CloudLiquid.ContentFactory.XmlContentReader.html",
    "title": "Class XmlContentReader | CloudLiquid",
    "keywords": "Class XmlContentReader Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class XmlContentReader : IContentReader Inheritance object XmlContentReader Implements IContentReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XmlContentReader() public XmlContentReader() Methods ParseRequestAsync(HttpContent) public Task<Hash> ParseRequestAsync(HttpContent content) Parameters content HttpContent Returns Task<Hash> ParseString(string) public Hash ParseString(string content) Parameters content string Returns Hash RemoveAllNamespaces(XElement) public static XElement RemoveAllNamespaces(XElement e) Parameters e XElement Returns XElement"
  },
  "api/CloudLiquid.ContentFactory.XmlContentWriter.html": {
    "href": "api/CloudLiquid.ContentFactory.XmlContentWriter.html",
    "title": "Class XmlContentWriter | CloudLiquid",
    "keywords": "Class XmlContentWriter Namespace CloudLiquid.ContentFactory Assembly CloudLiquid.dll public class XmlContentWriter : IContentWriter Inheritance object XmlContentWriter Implements IContentWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XmlContentWriter(string) public XmlContentWriter(string contentType) Parameters contentType string Methods CreateResponse(string) public StringContent CreateResponse(string output) Parameters output string Returns StringContent"
  },
  "api/CloudLiquid.ContentFactory.html": {
    "href": "api/CloudLiquid.ContentFactory.html",
    "title": "Namespace CloudLiquid.ContentFactory | CloudLiquid",
    "keywords": "Namespace CloudLiquid.ContentFactory Classes BasicContentWriter ContentFactory Csv2ContentReader CsvContentReader DictionaryFactory DictionaryStringObjectJsonConverter JsonContentReader JsonContentWriter TSVContentReader XmlContentReader XmlContentWriter Interfaces IContentReader IContentWriter"
  },
  "api/CloudLiquid.Core.LiquidProcessor.html": {
    "href": "api/CloudLiquid.Core.LiquidProcessor.html",
    "title": "Class LiquidProcessor | CloudLiquid",
    "keywords": "Class LiquidProcessor Namespace CloudLiquid.Core Assembly CloudLiquid.dll public class LiquidProcessor Inheritance object LiquidProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiquidProcessor(ILogger, BlobContainerClient) public LiquidProcessor(ILogger logger, BlobContainerClient blobContainerClient) Parameters logger ILogger blobContainerClient BlobContainerClient Methods InitializeTagsAndFilters() public void InitializeTagsAndFilters() Run(Hash, string) public RunResult Run(Hash input, string file) Parameters input Hash file string Returns RunResult"
  },
  "api/CloudLiquid.Core.html": {
    "href": "api/CloudLiquid.Core.html",
    "title": "Namespace CloudLiquid.Core | CloudLiquid",
    "keywords": "Namespace CloudLiquid.Core Classes LiquidProcessor"
  },
  "api/CloudLiquid.Filters.DataFilters.html": {
    "href": "api/CloudLiquid.Filters.DataFilters.html",
    "title": "Class DataFilters | CloudLiquid",
    "keywords": "Class DataFilters Namespace CloudLiquid.Filters Assembly CloudLiquid.dll public static class DataFilters Inheritance object DataFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddProperty(Context, dynamic, string, dynamic, int) Adds a property to the specified object or to an object at the specified index within a list. public static dynamic AddProperty(Context context, dynamic input, string key, dynamic entry, int index = -1) Parameters context Context The context. input dynamic The object or list to which the property will be added. key string The key of the property to be added entry dynamic The value of the property to be added. index int The optional index of the object within a list. Default value is -1. Returns dynamic If the input object is null, returns null or if the key is null or empty, returns the input object. If index is -1 returns a new object with the specified property added. If index is not -1 returns a new list with the property added to the object at the specified index. AddToList(Context, List<dynamic>, dynamic, bool, bool) Adds an item to the specified list with options for unique and null insertion. public static List<dynamic> AddToList(Context context, List<dynamic> data, dynamic insert, bool unique = false, bool nullInsert = false) Parameters context Context The context. data List<dynamic> The list to which the item will be added. insert dynamic TThe item to be added to the list. unique bool A boolean indicating whether the item should only be added if it is not already in the list. nullInsert bool A boolean indicating whether null values are allow to be inserted. Returns List<dynamic> The updated list with the item added if conditions are met. ClearNulls(Context, dynamic) Removes null or empty entries from the specified dictionary. public static Dictionary<string, dynamic> ClearNulls(Context context, dynamic data) Parameters context Context The context. data dynamic The dictionary to be processed. Returns Dictionary<string, dynamic> A new dictionary with null or empty entries removed if the input is a dictionary; otherwise, returns an empty dictionary if the input is null or not a dictionary. Coalesce(Context, params dynamic[]) Returns the first non-null value from the provided list of dynamic inputs. public static dynamic Coalesce(Context context, params dynamic[] input) Parameters context Context The context. input dynamic[] A list of dynamic inputs from which to select the first non-null value. Returns dynamic The first non-null value from the provided list of dynamic inputs, or null if all inputs are null. ConvertToInt(Context, object) Converts the input data to an integer. public static int ConvertToInt(Context context, object data) Parameters context Context The context. data object The data to convert. Returns int The converted integer. CreateHash(Context, string) Creates a new hash and optionally adds a specified key with a null value. public static Dictionary<string, dynamic> CreateHash(Context context, string key = null) Parameters context Context The context. key string An optional key to be added to the dictionary with a null value. Returns Dictionary<string, dynamic> A new dictionary with the specified key and null value if the key is provided; otherwise, an empty dictionary. CreateList(Context, dynamic) Creates a new list with an optional type specification. public static List<dynamic> CreateList(Context context, dynamic type = null) Parameters context Context The context. type dynamic An optional parameter specifying the type of elements in the list. Returns List<dynamic> A new empty list of dynamic elements. DataType(Context, object) Returns the data type of the input data. public static string DataType(Context context, object data) Parameters context Context The context. data object The data to check. Returns string Determines the data type of the specified object and returns its type as a string. DecodeBase64(Context, string) Decodes a Base64 encoded string into its original UTF-8 encoded string representation. public static dynamic DecodeBase64(Context context, string encodedString) Parameters context Context The context. encodedString string The encoded string. Returns dynamic The original UTF-8 encoded string represented by the Base64 encoded string. FormatDateTime(Context, object, string, string) Formats a timestamp object into a string representation using the specified format and locale. public static string FormatDateTime(Context context, object timestamp, string format = \"yyyy-MM-ddTHH:mm:ss.fffffffK\", string locale = \"en-us\") Parameters context Context The context. timestamp object The timestamp object to be formatted. format string The format string specifying the format. Default value is \"yyyy-MM-ddTHH:mm:ss.fffffffK\". locale string The locale. Returns string A string representation of the format timestamp object according to the specified format and locale. Returns null if the timestamp object is null. GetListFromHash(Context, dynamic, string) Retrieves a list from a hash based on the specified key. public static List<dynamic> GetListFromHash(Context context, dynamic data, string key) Parameters context Context The context. data dynamic The hash from which the list will be retrieved. key string The key used to access the list within the hash. Returns List<dynamic> The list associated with the specified key in the hash or null if the data parameter is null. IsLoop(Context, object) Determines whether the specified object is a list. public static bool IsLoop(Context context, object data) Parameters context Context The context. data object The data to be checked. Returns bool True if the specified context is loop, false otherwise. Json(Context, dynamic, string) Converts the input to a JSON string. public static string Json(Context context, dynamic input, string settings = null) Parameters context Context The context. input dynamic The input. settings string Optional settings. If \"nobrackets\", the outer brackets are removed from the resulting JSON string. Returns string The JSON string. LiquidContains(Context, object, string) Checks if the data contains the specified object. public static bool LiquidContains(Context context, object data, string Obj) Parameters context Context The context. data object The data. Obj string The object. Returns bool True if the data contains the object, false otherwise. Log(Context, dynamic) Writes the specified data to the console as a log entry. public static string Log(Context context, dynamic data) Parameters context Context The context. data dynamic The data to be logged. Returns string Always returns null. Nullifnull(Context, string) Returns the input string or \"null\" if the input is null or empty. public static string Nullifnull(Context context, string input) Parameters context Context The context. input string The input. Returns string \"null\" if the input string is null or empty, otherwise the input string. Padleft(Context, string, int, string) Pads the left side of the input string with the specified character. public static string Padleft(Context context, string input, int totalWidth, string padChar = \" \") Parameters context Context The context. input string The input. totalWidth int The number of characters in the resulting string. padChar string The pad character. Returns string The input string padded on the left to the specified total width. Padright(Context, string, int, string) Pads the input string on the right with the specified padding character until the total width is reached public static string Padright(Context context, string input, int totalWidth, string padChar = \" \") Parameters context Context The context. input string The input. totalWidth int The number of characters in the resulting string. padChar string The pad character. Returns string The input string padded on the right to the specified total width. Parsedouble(Context, string) Parses the input string to a double. public static double Parsedouble(Context context, string input) Parameters context Context The context. input string The input. Returns double The parsed double value. RemoveFromList(Context, List<dynamic>, dynamic) Removes the specified item from the list. public static List<dynamic> RemoveFromList(Context context, List<dynamic> data, dynamic key) Parameters context Context The context. data List<dynamic> The list from which the item will be removed. key dynamic The item to be removed from the list. Returns List<dynamic> The updated list with the item removed. RemoveProperty(Context, dynamic, string, int) Removes a property from the specified object or from an object at the specified index within a list. public static dynamic RemoveProperty(Context context, dynamic input, string key, int index = -1) Parameters context Context The context. input dynamic The object or list from which the property will be removed. key string The key of the property to be removed. index int The optional index of the object within a list. Default value is -1. Returns dynamic If the input object is null, returns null or if the key is null or empty, returns the input object. If index is -1 returns a new object with the specified property removed. If index is not -1 returns a new list with the property removed from the object at the specified index. Secret(Context, string) Retrieves the value of an environment variable. public static dynamic Secret(Context context, string input) Parameters context Context The context. input string The input. Returns dynamic The value of the specified environment variable SetProperty(Context, dynamic, string, dynamic, int) Sets the value of a property in the specified object or in an object at the specified index within a list. public static dynamic SetProperty(Context context, dynamic input, string key, dynamic entry, int index = -1) Parameters context Context The context. input dynamic The object or list in which the property value will be set. key string The key of the property to be set. entry dynamic The value to set for the property. index int The optional index of the object within a list. Default value is -1. Returns dynamic If the input object is null, returns null or if the key is null or empty, returns the input object. If index is -1 returns a object with the property value set. If index is not -1 returns a list with the property value set to the object at the specified index. String(Context, object) Converts the specified object to a string. public static string String(Context context, object data) Parameters context Context The context. data object The data to be converted to a string. Returns string The string representation of the specified object. Xml(Context, dynamic) Converts the input object to an XML string. public static string Xml(Context context, dynamic input) Parameters context Context The context. input dynamic The input. Returns string The XML string."
  },
  "api/CloudLiquid.Filters.html": {
    "href": "api/CloudLiquid.Filters.html",
    "title": "Namespace CloudLiquid.Filters | CloudLiquid",
    "keywords": "Namespace CloudLiquid.Filters Classes DataFilters"
  },
  "api/CloudLiquid.ObjectModel.CloudError.html": {
    "href": "api/CloudLiquid.ObjectModel.CloudError.html",
    "title": "Class CloudError | CloudLiquid",
    "keywords": "Class CloudError Namespace CloudLiquid.ObjectModel Assembly CloudLiquid.dll public class CloudError Inheritance object CloudError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CloudError() public CloudError() CloudError(string, string, string, string) public CloudError(string error, string function, string action, string exceptionMessage) Parameters error string function string action string exceptionMessage string Properties Action public string Action { get; set; } Property Value string Error public string Error { get; set; } Property Value string ExceptionMessage public string ExceptionMessage { get; set; } Property Value string Function public string Function { get; set; } Property Value string Methods FormatMessage(string) public string FormatMessage(string responseContentType) Parameters responseContentType string Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/CloudLiquid.ObjectModel.RunResult.html": {
    "href": "api/CloudLiquid.ObjectModel.RunResult.html",
    "title": "Class RunResult | CloudLiquid",
    "keywords": "Class RunResult Namespace CloudLiquid.ObjectModel Assembly CloudLiquid.dll public class RunResult Inheritance object RunResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorAction public string ErrorAction { get; set; } Property Value string ErrorMessage public string ErrorMessage { get; set; } Property Value string Output public string Output { get; set; } Property Value string Success public bool Success { get; set; } Property Value bool"
  },
  "api/CloudLiquid.ObjectModel.html": {
    "href": "api/CloudLiquid.ObjectModel.html",
    "title": "Namespace CloudLiquid.ObjectModel | CloudLiquid",
    "keywords": "Namespace CloudLiquid.ObjectModel Classes CloudError RunResult"
  },
  "api/CloudLiquid.Tags.AzureTag.html": {
    "href": "api/CloudLiquid.Tags.AzureTag.html",
    "title": "Class AzureTag | CloudLiquid",
    "keywords": "Class AzureTag Namespace CloudLiquid.Tags Assembly CloudLiquid.dll public class AzureTag : BaseCloudLiquidTag Inheritance object Tag Block BaseCloudLiquidTag AzureTag Inherited Members BaseCloudLiquidTag.Logger BaseCloudLiquidTag.To BaseCloudLiquidTag.InitializeLogger(ILogger) Block.Parse(List<string>) Block.EndTag() Block.UnknownTag(string, string, List<string>) Block.CreateVariable(string) Block.AssertMissingDelimitation() Block.RenderAll(List<object>, Context, TextWriter) Block.BlockDelimiter Tag.NodeList Tag.TagName Tag.Markup Tag.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AzureTag() public AzureTag() AzureTag(BlobContainerClient) Initializes a new instance with the specified BlobContainerClient. public AzureTag(BlobContainerClient blobContainerClient) Parameters blobContainerClient BlobContainerClient The BlobContainerClient. AzureTag(ILogger) Initializes a new instance with the specified logger. public AzureTag(ILogger logger) Parameters logger ILogger The logger. AzureTag(ILogger, BlobContainerClient) Initializes a new instance with the specified logger and BlobContainerClient. public AzureTag(ILogger logger, BlobContainerClient blobContainerClient) Parameters logger ILogger The logger. blobContainerClient BlobContainerClient The BlobContainerClient. Methods Initialize(string, string, List<string>) Initializes the tag with the specified tagName, markup, and tokens. public override void Initialize(string tagName, string markup, List<string> tokens) Parameters tagName string The name of the tag. markup string The markup for the tag. tokens List<string> The list of tokens. InitializeBlobContainerClient(BlobContainerClient) Initializes the BlobContainerClient. public void InitializeBlobContainerClient(BlobContainerClient blobContainerClient) Parameters blobContainerClient BlobContainerClient The BlobContainerClient. Render(Context, TextWriter) Renders the tag to the specified result using the provided context. public override void Render(Context context, TextWriter result) Parameters context Context The context. result TextWriter The result to render to."
  },
  "api/CloudLiquid.Tags.CaptureJSON.html": {
    "href": "api/CloudLiquid.Tags.CaptureJSON.html",
    "title": "Class CaptureJSON | CloudLiquid",
    "keywords": "Class CaptureJSON Namespace CloudLiquid.Tags Assembly CloudLiquid.dll public class CaptureJSON : BaseCloudLiquidTag Inheritance object Tag Block BaseCloudLiquidTag CaptureJSON Inherited Members BaseCloudLiquidTag.Logger BaseCloudLiquidTag.To BaseCloudLiquidTag.InitializeLogger(ILogger) BaseCloudLiquidTag.Initialize(string, string, List<string>) Block.Parse(List<string>) Block.EndTag() Block.UnknownTag(string, string, List<string>) Block.CreateVariable(string) Block.AssertMissingDelimitation() Block.RenderAll(List<object>, Context, TextWriter) Block.BlockDelimiter Tag.NodeList Tag.TagName Tag.Markup Tag.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Render(Context, TextWriter) Renders the tag, capturing its content and parse it as JSON. public override void Render(Context context, TextWriter result) Parameters context Context The context. result TextWriter The text writer to render to."
  },
  "api/CloudLiquid.Tags.CaptureXML.html": {
    "href": "api/CloudLiquid.Tags.CaptureXML.html",
    "title": "Class CaptureXML | CloudLiquid",
    "keywords": "Class CaptureXML Namespace CloudLiquid.Tags Assembly CloudLiquid.dll public class CaptureXML : BaseCloudLiquidTag Inheritance object Tag Block BaseCloudLiquidTag CaptureXML Inherited Members BaseCloudLiquidTag.Logger BaseCloudLiquidTag.To BaseCloudLiquidTag.InitializeLogger(ILogger) BaseCloudLiquidTag.Initialize(string, string, List<string>) Block.Parse(List<string>) Block.EndTag() Block.UnknownTag(string, string, List<string>) Block.CreateVariable(string) Block.AssertMissingDelimitation() Block.RenderAll(List<object>, Context, TextWriter) Block.BlockDelimiter Tag.NodeList Tag.TagName Tag.Markup Tag.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Render(Context, TextWriter) Renders the tag, capturing its content, parsing it as XML, and converting it to JSON. public override void Render(Context context, TextWriter result) Parameters context Context The context. result TextWriter The text writer to render to."
  },
  "api/CloudLiquid.Tags.CloudLiquidTagFactory.html": {
    "href": "api/CloudLiquid.Tags.CloudLiquidTagFactory.html",
    "title": "Class CloudLiquidTagFactory | CloudLiquid",
    "keywords": "Class CloudLiquidTagFactory Namespace CloudLiquid.Tags Assembly CloudLiquid.dll public class CloudLiquidTagFactory : ITagFactory Inheritance object CloudLiquidTagFactory Implements ITagFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CloudLiquidTagFactory(Type, string) Initializes a new instance of the CloudLiquidTagFactory class with the specified tag type and name. public CloudLiquidTagFactory(Type tagType, string tagName) Parameters tagType Type The type of the tag. tagName string The name of the tag. CloudLiquidTagFactory(Type, string, BlobContainerClient) Initializes a new instance of the CloudLiquidTagFactory class with the specified tag type, name, and BlobContainerClient. public CloudLiquidTagFactory(Type tagType, string tagName, BlobContainerClient blobContainerClient) Parameters tagType Type The type of the tag. tagName string The name of the tag. blobContainerClient BlobContainerClient The BlobContainerClient instance. CloudLiquidTagFactory(Type, string, ILogger) Initializes a new instance of the CloudLiquidTagFactory class with the specified tag type, name, and logger. public CloudLiquidTagFactory(Type tagType, string tagName, ILogger logger) Parameters tagType Type The type of the tag. tagName string The name of the tag. logger ILogger The logger instance. CloudLiquidTagFactory(Type, string, ILogger, BlobContainerClient) Initializes a new instance of the CloudLiquidTagFactory class with the specified tag type, name, logger, and BlobContainerClient. public CloudLiquidTagFactory(Type tagType, string tagName, ILogger logger, BlobContainerClient blobContainerClient) Parameters tagType Type The type of the tag. tagName string The name of the tag. logger ILogger The logger instance. blobContainerClient BlobContainerClient The BlobContainerClient instance. Properties TagName Name of the tag public string TagName { get; } Property Value string Methods Create() Creates an instance of the specified tag type. public Tag Create() Returns Tag An instance of the tag."
  },
  "api/CloudLiquid.Tags.IncludeLocal.html": {
    "href": "api/CloudLiquid.Tags.IncludeLocal.html",
    "title": "Class IncludeLocal | CloudLiquid",
    "keywords": "Class IncludeLocal Namespace CloudLiquid.Tags Assembly CloudLiquid.dll public class IncludeLocal : BaseCloudLiquidTag Inheritance object Tag Block BaseCloudLiquidTag IncludeLocal Inherited Members BaseCloudLiquidTag.Logger BaseCloudLiquidTag.To BaseCloudLiquidTag.InitializeLogger(ILogger) Block.Parse(List<string>) Block.EndTag() Block.UnknownTag(string, string, List<string>) Block.CreateVariable(string) Block.AssertMissingDelimitation() Block.RenderAll(List<object>, Context, TextWriter) Block.BlockDelimiter Tag.NodeList Tag.TagName Tag.Markup Tag.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Initialize(string, string, List<string>) Initializes the tag with the specified name, markup, and tokens. public override void Initialize(string tagName, string markup, List<string> tokens) Parameters tagName string The name of the tag. markup string The markup for the tag. tokens List<string> The tokens in the template. Render(Context, TextWriter) Renders the tag, including the specified local template. public override void Render(Context context, TextWriter result) Parameters context Context The context. result TextWriter The text writer to render to."
  },
  "api/CloudLiquid.Tags.html": {
    "href": "api/CloudLiquid.Tags.html",
    "title": "Namespace CloudLiquid.Tags | CloudLiquid",
    "keywords": "Namespace CloudLiquid.Tags Classes AzureTag CaptureJSON CaptureXML CloudLiquidTagFactory IncludeLocal"
  },
  "api/CloudLiquid.Tests.AzureTagTests.html": {
    "href": "api/CloudLiquid.Tests.AzureTagTests.html",
    "title": "Class AzureTagTests | CloudLiquid",
    "keywords": "Class AzureTagTests Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class AzureTagTests Inheritance object AzureTagTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AzureTag_InitializeWithLoggerAndBlob() [Fact] public void AzureTag_InitializeWithLoggerAndBlob() AzureTag_InvalidMarkupSyntax() [Fact] public void AzureTag_InvalidMarkupSyntax() AzureTag_TemplateNotFound() [Fact] public void AzureTag_TemplateNotFound()"
  },
  "api/CloudLiquid.Tests.CaptureJsonTests.html": {
    "href": "api/CloudLiquid.Tests.CaptureJsonTests.html",
    "title": "Class CaptureJsonTests | CloudLiquid",
    "keywords": "Class CaptureJsonTests Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class CaptureJsonTests Inheritance object CaptureJsonTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestCaptureJson() [Fact] public void TestCaptureJson()"
  },
  "api/CloudLiquid.Tests.CaptureXmlTests.html": {
    "href": "api/CloudLiquid.Tests.CaptureXmlTests.html",
    "title": "Class CaptureXmlTests | CloudLiquid",
    "keywords": "Class CaptureXmlTests Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class CaptureXmlTests Inheritance object CaptureXmlTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestRender() [Fact] public void TestRender()"
  },
  "api/CloudLiquid.Tests.DataFiltersTests.html": {
    "href": "api/CloudLiquid.Tests.DataFiltersTests.html",
    "title": "Class DataFiltersTests | CloudLiquid",
    "keywords": "Class DataFiltersTests Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class DataFiltersTests Inheritance object DataFiltersTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DecodeBase64_InvalidString() [Fact] public void DecodeBase64_InvalidString() LiquidContains_DataInvalidType() [Fact] public void LiquidContains_DataInvalidType() TestAddProperty_EmptyKey() [Fact] public void TestAddProperty_EmptyKey() TestAddProperty_IndexSpecified() [Fact] public void TestAddProperty_IndexSpecified() TestAddProperty_NewProperty() [Fact] public void TestAddProperty_NewProperty() TestAddProperty_NullInput() [Fact] public void TestAddProperty_NullInput() TestAddToList_NullInsertAndNullInsertFalse() [Fact] public void TestAddToList_NullInsertAndNullInsertFalse() TestAddToList_NullInsertAndNullInsertTrue() [Fact] public void TestAddToList_NullInsertAndNullInsertTrue() TestAddToList_UniqueFalseAndInsert() [Fact] public void TestAddToList_UniqueFalseAndInsert() TestAddToList_UniqueTrueAndInsert() [Fact] public void TestAddToList_UniqueTrueAndInsert() TestAddToList_UniqueTrueAndInsertAlreadyInList() [Fact] public void TestAddToList_UniqueTrueAndInsertAlreadyInList() TestClearNulls_DictionaryContainNulls() [Fact] public void TestClearNulls_DictionaryContainNulls() TestClearNulls_NoDictionary() [Fact] public void TestClearNulls_NoDictionary() TestClearNulls_NullData() [Fact] public void TestClearNulls_NullData() TestCoalesce() [Fact] public void TestCoalesce() TestCoalesce_AllNull() [Fact] public void TestCoalesce_AllNull() TestCoalesce_FirstNull() [Fact] public void TestCoalesce_FirstNull() TestCreateHash_WithKey() [Fact] public void TestCreateHash_WithKey() TestCreateHash_WithNullKey() [Fact] public void TestCreateHash_WithNullKey() TestCreateHash_WithoutKey() [Fact] public void TestCreateHash_WithoutKey() TestCreateList_WithType() [Fact] public void TestCreateList_WithType() TestCreateList_WithoutType() [Fact] public void TestCreateList_WithoutType() TestDataType_Boolean() [Fact] public void TestDataType_Boolean() TestDataType_Dictionary() [Fact] public void TestDataType_Dictionary() TestDataType_Hash() [Fact] public void TestDataType_Hash() TestDataType_Integer() [Fact] public void TestDataType_Integer() TestDataType_ReturnNull() [Fact] public void TestDataType_ReturnNull() TestDataType_String() [Fact] public void TestDataType_String() TestDecodeBase64_String() [Fact] public void TestDecodeBase64_String() TestFormatDateTime_DefaultFormat() [Fact] public void TestFormatDateTime_DefaultFormat() TestFormatDateTime_NullTimestamp() [Fact] public void TestFormatDateTime_NullTimestamp() TestFormatDateTime_ThrowsExceptionForInvalidTimestamp() [Fact] public void TestFormatDateTime_ThrowsExceptionForInvalidTimestamp() TestFormatDateTime_WithFormat() [Fact] public void TestFormatDateTime_WithFormat() TestGetListFromHash_DataIsNull() [Fact] public void TestGetListFromHash_DataIsNull() TestGetListFromHash_KeyExistInHash() [Fact] public void TestGetListFromHash_KeyExistInHash() TestInt() [Fact] public void TestInt() TestInt_DoubleToInt() [Fact] public void TestInt_DoubleToInt() TestInt_InvalidString() [Fact] public void TestInt_InvalidString() TestIsLoop_ListDynamic() [Fact] public void TestIsLoop_ListDynamic() TestIsLoop_ListInt() [Fact] public void TestIsLoop_ListInt() TestIsLoop_WithHash() [Fact] public void TestIsLoop_WithHash() TestIsLoop_WithNull() [Fact] public void TestIsLoop_WithNull() TestIsLoop_WithString() [Fact] public void TestIsLoop_WithString() TestJson_Bool() [Fact] public void TestJson_Bool() TestJson_Decimal() [Fact] public void TestJson_Decimal() TestJson_Dictionary() [Fact] public void TestJson_Dictionary() TestJson_DictionaryAndList() [Fact] public void TestJson_DictionaryAndList() TestJson_Int() [Fact] public void TestJson_Int() TestJson_List() [Fact] public void TestJson_List() TestJson_Object() [Fact] public void TestJson_Object() TestJson_WithoutBrackets() [Fact] public void TestJson_WithoutBrackets() TestLiquidContains_DataIsDictionaryAndObjectDoesNotExist() [Fact] public void TestLiquidContains_DataIsDictionaryAndObjectDoesNotExist() TestLiquidContains_DataIsDictionaryAndObjectExists() [Fact] public void TestLiquidContains_DataIsDictionaryAndObjectExists() TestLiquidContains_DataIsHashAndObjectDoesNotExist() [Fact] public void TestLiquidContains_DataIsHashAndObjectDoesNotExist() TestLiquidContains_DataIsHashAndObjectExists() [Fact] public void TestLiquidContains_DataIsHashAndObjectExists() TestLiquidContains_DataIsListAndObjectDoesNotExist() [Fact] public void TestLiquidContains_DataIsListAndObjectDoesNotExist() TestLiquidContains_DataIsListAndObjectExists() [Fact] public void TestLiquidContains_DataIsListAndObjectExists() TestLiquidContains_DataIsStringAndObjectDoesNotExist() [Fact] public void TestLiquidContains_DataIsStringAndObjectDoesNotExist() TestLiquidContains_DataIsStringAndObjectExists() [Fact] public void TestLiquidContains_DataIsStringAndObjectExists() TestLog() [Fact] public void TestLog() TestNullifnull() [Fact] public void TestNullifnull() TestPadleft(string, int, string, string) [Theory] [InlineData(new object[] { \"test\", 10, \"*\", \"******test\" })] [InlineData(new object[] { \"test\", 4, \"*\", \"test\" })] [InlineData(new object[] { \"test\", 2, \"*\", \"test\" })] [InlineData(new object[] { \"\", 5, \"*\", \"*****\" })] [InlineData(new object[] { null, 5, \"*\", null })] public void TestPadleft(string input, int totalWidth, string padChar, string expected) Parameters input string totalWidth int padChar string expected string TestPadright(string, int, string, string) [Theory] [InlineData(new object[] { \"test\", 10, \"*\", \"test******\" })] [InlineData(new object[] { \"test\", 4, \"*\", \"test\" })] [InlineData(new object[] { \"test\", 2, \"*\", \"test\" })] [InlineData(new object[] { \"\", 5, \"*\", \"*****\" })] [InlineData(new object[] { null, 5, \"*\", null })] public void TestPadright(string input, int totalWidth, string padChar, string expected) Parameters input string totalWidth int padChar string expected string TestParseDouble_InvalidFormat(string) [Theory] [InlineData(new object[] { \"test\" })] [InlineData(new object[] { \"\" })] public void TestParseDouble_InvalidFormat(string input) Parameters input string TestParsedouble() [Fact] public void TestParsedouble() TestParsedouble_NullInput() [Fact] public void TestParsedouble_NullInput() TestRemoveFromList_ElementDoesNotExist() [Fact] public void TestRemoveFromList_ElementDoesNotExist() TestRemoveFromList_ElementExist() [Fact] public void TestRemoveFromList_ElementExist() TestRemoveProperty_EmptyKey() [Fact] public void TestRemoveProperty_EmptyKey() TestRemoveProperty_IndexSpecified() [Fact] public void TestRemoveProperty_IndexSpecified() TestRemoveProperty_NullInput() [Fact] public void TestRemoveProperty_NullInput() TestRemoveProperty_RemovesPropertyIfExists() [Fact] public void TestRemoveProperty_RemovesPropertyIfExists() TestSecret() [Fact] public void TestSecret() TestSetProperty_EmptyKey() [Fact] public void TestSetProperty_EmptyKey() TestSetProperty_NewProperty() [Fact] public void TestSetProperty_NewProperty() TestSetProperty_NullInput() [Fact] public void TestSetProperty_NullInput() TestSetProperty_UpdateProperty() [Fact] public void TestSetProperty_UpdateProperty() TestSetProperty_UpdateWithIndex() [Fact] public void TestSetProperty_UpdateWithIndex() TestString_BooleanToString() [Fact] public void TestString_BooleanToString() TestString_IntegerToString() [Fact] public void TestString_IntegerToString() TestString_NullToString() [Fact] public void TestString_NullToString() TestString_WithString() [Fact] public void TestString_WithString() TestXml_Bool() [Fact] public void TestXml_Bool() TestXml_Decimal() [Fact] public void TestXml_Decimal() TestXml_Dictionary() [Fact] public void TestXml_Dictionary() TestXml_DictionaryAndList() [Fact] public void TestXml_DictionaryAndList() TestXml_Int() [Fact] public void TestXml_Int() TestXml_List() [Fact] public void TestXml_List() TestXml_Object() [Fact] public void TestXml_Object()"
  },
  "api/CloudLiquid.Tests.Helper.DataObject.html": {
    "href": "api/CloudLiquid.Tests.Helper.DataObject.html",
    "title": "Class Helper.DataObject | CloudLiquid",
    "keywords": "Class Helper.DataObject Namespace CloudLiquid.Tests Assembly CloudLiquid.dll [LiquidType(new string[] { \"PropAllowed\" })] public class Helper.DataObject Inheritance object Helper.DataObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PropAllowed public string PropAllowed { get; set; } Property Value string PropDisallowed public string PropDisallowed { get; set; } Property Value string"
  },
  "api/CloudLiquid.Tests.Helper.DataObjectDrop.html": {
    "href": "api/CloudLiquid.Tests.Helper.DataObjectDrop.html",
    "title": "Class Helper.DataObjectDrop | CloudLiquid",
    "keywords": "Class Helper.DataObjectDrop Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class Helper.DataObjectDrop : Drop, ILiquidizable, IIndexable, IContextAware Inheritance object DropBase Drop Helper.DataObjectDrop Implements ILiquidizable IIndexable IContextAware Inherited Members DropBase.ContainsKey(object) DropBase.ToLiquid() DropBase.BeforeMethod(string) DropBase.InvokeDrop(object) DropBase.Context DropBase.this[object] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Prop public string Prop { get; set; } Property Value string"
  },
  "api/CloudLiquid.Tests.Helper.DataObjectRegistered.html": {
    "href": "api/CloudLiquid.Tests.Helper.DataObjectRegistered.html",
    "title": "Class Helper.DataObjectRegistered | CloudLiquid",
    "keywords": "Class Helper.DataObjectRegistered Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class Helper.DataObjectRegistered Inheritance object Helper.DataObjectRegistered Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PropAllowed public string PropAllowed { get; set; } Property Value string PropDisallowed public string PropDisallowed { get; set; } Property Value string"
  },
  "api/CloudLiquid.Tests.Helper.html": {
    "href": "api/CloudLiquid.Tests.Helper.html",
    "title": "Class Helper | CloudLiquid",
    "keywords": "Class Helper Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class Helper Inheritance object Helper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AssertTemplateResult(string, string, Hash, SyntaxCompatibility) public static void AssertTemplateResult(string expected, string template, Hash localVariables, SyntaxCompatibility syntax = SyntaxCompatibility.DotLiquid20) Parameters expected string template string localVariables Hash syntax SyntaxCompatibility AssertTemplateResult(string, string, Hash, IEnumerable<Type>, SyntaxCompatibility) public static void AssertTemplateResult(string expected, string template, Hash localVariables, IEnumerable<Type> localFilters, SyntaxCompatibility syntax = SyntaxCompatibility.DotLiquid20) Parameters expected string template string localVariables Hash localFilters IEnumerable<Type> syntax SyntaxCompatibility AssertTemplateResult(string, string, INamingConvention) public static void AssertTemplateResult(string expected, string template, INamingConvention namingConvention) Parameters expected string template string namingConvention INamingConvention AssertTemplateResult(string, string, SyntaxCompatibility) public static void AssertTemplateResult(string expected, string template, SyntaxCompatibility syntax = SyntaxCompatibility.DotLiquid20) Parameters expected string template string syntax SyntaxCompatibility AssertTemplateResult(string, string, object, INamingConvention, SyntaxCompatibility) public static void AssertTemplateResult(string expected, string template, object anonymousObject, INamingConvention namingConvention, SyntaxCompatibility syntax = SyntaxCompatibility.DotLiquid20) Parameters expected string template string anonymousObject object namingConvention INamingConvention syntax SyntaxCompatibility LockTemplateStaticVars(INamingConvention, Action) public static void LockTemplateStaticVars(INamingConvention namingConvention, Action test) Parameters namingConvention INamingConvention test Action"
  },
  "api/CloudLiquid.Tests.IncludeLocalTests.html": {
    "href": "api/CloudLiquid.Tests.IncludeLocalTests.html",
    "title": "Class IncludeLocalTests | CloudLiquid",
    "keywords": "Class IncludeLocalTests Namespace CloudLiquid.Tests Assembly CloudLiquid.dll public class IncludeLocalTests Inheritance object IncludeLocalTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IncludeLocal_InvalidMarkup() [Fact] public void IncludeLocal_InvalidMarkup() IncludeLocal_InvalidTemplate() [Fact] public void IncludeLocal_InvalidTemplate() Initialize_ValidMarkup() [Fact] public void Initialize_ValidMarkup()"
  },
  "api/CloudLiquid.Tests.html": {
    "href": "api/CloudLiquid.Tests.html",
    "title": "Namespace CloudLiquid.Tests | CloudLiquid",
    "keywords": "Namespace CloudLiquid.Tests Classes AzureTagTests CaptureJsonTests CaptureXmlTests DataFiltersTests Helper Helper.DataObject Helper.DataObjectDrop Helper.DataObjectRegistered IncludeLocalTests"
  },
  "api/CloudLiquid.html": {
    "href": "api/CloudLiquid.html",
    "title": "Namespace CloudLiquid | CloudLiquid",
    "keywords": "Namespace CloudLiquid Classes BaseCloudLiquidTag"
  },
  "docs/Filters.html": {
    "href": "docs/Filters.html",
    "title": "| CloudLiquid",
    "keywords": "CloudLiquid Filters Documentation Welcome to the documentation for the CloudLiquid filters! This guide will provide you with detailed information on each filter and how to use them in your Liquid templates. padleft Description: Pads the left side of the input string with the specified character to ensure the resulting string has a total width as specified. JSON Input: { \"input\": \"Hello\", \"totalWidth\": 10, \"padChar\": \"*\" } Liquid: {{ 'Hello' | padleft: 10, '*' }} Output: *****Hello secret Description: Retrieves the value of an environment variable specified by the input. JSON Input: { \"input\": \"ContainerName\" } Liquid: {{ content.input | secret }} Output: liquid padright Description: Pads the right side of the input string with the specified character until the total width specified is reached. JSON Input: { \"input\": \"Hello\", \"totalWidth\": 10, \"padChar\": \"*\" } Liquid: {{ 'Hello' | padright: 10, '*' }} Output: Hello***** nullifnull Description: Returns \"null\" if the input string is null or empty; otherwise, returns the input string. JSON Input: { \"input\": \"\" } Liquid: {{ '' | nullifnull }} Output: null parsedouble Description: Parses the input string to a double. JSON Input: { \"input\": \"123.45\" } Liquid: {{ '123.45' | parsedouble }} Output: 123.45 json Description: Converts the input to a JSON string. Optionally removes the outer brackets if \"nobrackets\" is specified. JSON Input: { \"input\": {\"name\": \"John\", \"age\": 30}, \"settings\": \"nobrackets\" } Liquid: {{ {\"name\": \"John\", \"age\": 30} | json: 'nobrackets' }} Output: \"name\":\"John\",\"age\":30 xml Description: Converts the input object to an XML string. JSON Input: { \"input\": {\"name\": \"John\", \"age\": 30} } Liquid: {{ {\"name\": \"John\", \"age\": 30} | xml }} Output: <root> <name>John</name> <age>30</age> </root> liquid_contains Description: Checks if the data contains the specified object. JSON Input: { \"data\": [\"apple\", \"banana\", \"cherry\"], \"Obj\": \"banana\" } Liquid: {{ [\"apple\", \"banana\", \"cherry\"] | liquid_contains: 'banana' }} Output: true data_type Description: Determines the data type of the input data and returns its type as a string. JSON Input: { \"data\": 123 } Liquid: {{ 123 | data_type }} Output: Integer convert_to_int Description: Converts the input data to an integer. JSON Input: { \"data\": \"123\" } Liquid: {{ \"123\" | convert_to_int }} Output: 123 string Description: Converts the specified object to a string. JSON Input: { \"data\": 123 } Liquid: {{ 123 | string }} Output: \"123\" is_loop Description: Determines whether the specified object is a list. JSON Input: { \"data\": [\"apple\", \"banana\", \"cherry\"] } Liquid: {{ [\"apple\", \"banana\", \"cherry\"] | is_loop }} Output: true clear_nulls Description: Removes null or empty entries from the specified dictionary. JSON Input: { \"data\": {\"name\": \"John\", \"age\": null} } Liquid: {{ {\"name\": \"John\", \"age\": null} | clear_nulls }} Output: { \"name\": \"John\" } create_hash Description: Creates a new hash and optionally adds a specified key with a null value. JSON Input: { \"key\": \"exampleKey\" } Liquid: {{ '' | create_hash: 'exampleKey' }} Output: { \"exampleKey\": null } create_list Description: Creates a new list with an optional type specification. JSON Input: { \"type\": \"dynamic\" } Liquid: {{ '' | create_list: 'dynamic' }} Output: [] add_to_list Description: Adds an item to the specified list with options for unique and null insertion. JSON Input: { \"data\": [\"apple\", \"banana\"], \"insert\": \"banana\", \"unique\": true, \"nullInsert\": false } Liquid: {% assign list = data | AddToList: 'banana', true, false %} Output: [\"apple\", \"banana\"] remove_from_list Description: Removes the specified item from the list. JSON Input: { \"data\": [\"apple\", \"banana\", \"cherry\"], \"key\": \"banana\" } Liquid: {% assign list = data | RemoveFromList: 'banana' %} Output: [\"apple\", \"cherry\"] get_list_from_hash Description: Retrieves a list from a hash based on the specified key. JSON Input: { \"data\": {\"key1\": [\"item1\", \"item2\"], \"key2\": [\"item3\", \"item4\"]}, \"key\": \"key1\" } Liquid: {% assign list = data | GetListFromHash: 'key1' %} Output: [\"item1\", \"item2\"] log Description: Writes the specified data to the console as a log entry. JSON Input: { \"data\": \"This is a log message\" } Liquid: {{ 'This is a log message' | Log }} Output: This is a log message remove_property Description: Removes a property from the specified object or from an object at the specified index within a list. JSON Input: { \"data\": [{\"key1\": \"value1\", \"key2\": \"value2\"}, {\"key1\": \"value3\", \"key2\": \"value4\"}], \"key\": \"key1\", \"index\": 0 } Liquid: {% assign newData = data | RemoveProperty: 'key1', 0 %} Output: [ {\"key2\": \"value2\"}, {\"key1\": \"value3\", \"key2\": \"value4\"} ] add_property Description: Adds a property to an object at the specified index within a list. JSON Input: { \"data\": [{\"key1\": \"value1\"}, {\"key1\": \"value3\"}], \"key\": \"key2\", \"entry\": \"value2\", \"index\": 1 } Liquid: {% assign newData = data | AddProperty: 'key2', 'value2', 1 %} Output: [ {\"key1\": \"value1\"}, {\"key1\": \"value3\", \"key2\": \"value2\"} ] set_property Description: Sets the value of a property in an object at the specified index within a list. JSON Input: { \"data\": [{\"key1\": \"value1\"}, {\"key1\": \"value3\"}], \"key\": \"key1\", \"entry\": \"newValue\", \"index\": 1 } Liquid: {% assign newData = data | SetProperty: 'key1', 'newValue', 1 %} Output: [ {\"key1\": \"value1\"}, {\"key1\": \"newValue\"} ] coalesce Description: Returns the first non-null value from the provided list of dynamic inputs. JSON Input: { \"inputs\": [null, null, \"value\", null] } Liquid: {% assign firstNonNull = inputs | Coalesce %} Output: \"value\" decode_base64 Description: Decodes a Base64 encoded string into its original UTF-8 encoded string representation. JSON Input: { \"encodedString\": \"aGVsbG8gd29ybGQ=\" } Liquid: {% assign decodedString = encodedString | DecodeBase64 %} Output: \"hello world\" format_date_time **Description:**Formats a timestamp object into a string representation using the specified format and locale. JSON Input: { \"timestamp\": \"2024-06-01T12:00:00Z\", \"format\": \"yyyy-MM-dd\", \"locale\": \"en-us\" } Liquid: {% assign formattedDate = timestamp | FormatDateTime: 'yyyy-MM-dd', 'en-us' %} Output: \"2024-06-01\""
  },
  "docs/Tags.html": {
    "href": "docs/Tags.html",
    "title": "| CloudLiquid",
    "keywords": "CloudLiquid Tags Documentation Welcome to the documentation for the CloudLiquid Tags! This guide will provide you with detailed information on each tag and how to use them in your Liquid templates. AzureTag Documentation The AzureTag is designed to include templates from Azure Blob Storage into your Liquid templates. It initializes with either a BlobContainerClient or both a BlobContainerClient and a ILogger to facilitate interactions with Azure Blob Storage and optional logging. Example Usage Assuming you have a template stored in Azure Blob Storage named greeting.liquid with the content: Hello, {{ content.user.name }}! And your JSON input is: { \"user\": { \"name\": \"John Doe\" } } You would use the AzureTag in your main Liquid template like so: {% include_azure '\"greeting\" %} The output would be: Hello, John Doe! IncludeLocal Documentation The IncludeLocal tag allows you to include local Liquid templates within another Liquid template. It supports passing variables to the included templates. Example Usage Given a local template named signature: Best regards, {{ content.user.signature }} And your JSON input is: { \"user\": { \"signature\": \"John Doe\" } } You can include this local template in your main Liquid template as follows: {% include_local 'signature' %} The output would be: Best regards, John Doe CaptureXML Documentation The CaptureXML tag captures the content within its block, parses it as XML, converts it to JSON, and assigns it to a variable. This is useful for converting XML content to a JSON object within a Liquid template. Example Usage Given the following XML wrapped in a CaptureXML tag: {% capture_xml userJson %} <user> <name>John Doe</name> <email>john.doe@example.com</email> </user> {% endcapture_xml %} The captured XML is converted to JSON and assigned to userJson. The equivalent JSON representation would be: { \"user\": { \"name\": \"John Doe\", \"email\": \"john.doe@example.com\" } } You can then use userJson in your Liquid template to access the converted JSON data. CaptureJSON Documentation The CaptureJSON tag captures the content within its block, parses it as JSON, and assigns it to a variable. This allows for capturing and manipulating JSON data directly within a Liquid template. Example Usage If you have JSON content that you want to capture and assign to a variable: {% capture_json userinfo %} { \"name\": \"John Doe\", \"email\": \"john.doe@example.com\" } {% endcapture_json %} The JSON content is captured and assigned to userInfo. You can then access userInfo in your Liquid template, for example: Hello, {{ userInfo.name }}! The output would be: Hello, John Doe! Each of these tags enhances the functionality of Liquid templates, allowing for dynamic content inclusion, format conversion, and data manipulation directly within the template."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | CloudLiquid",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | CloudLiquid",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | CloudLiquid",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}